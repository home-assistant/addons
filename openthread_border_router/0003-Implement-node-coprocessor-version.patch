From f5edb2d3ab257e03627461b5fa6ff6332988f75f Mon Sep 17 00:00:00 2001
From: puddly <32534428+puddly@users.noreply.github.com>
Date: Wed, 13 Nov 2024 16:55:53 -0500
Subject: [PATCH 3/3] Implement `/node/coprocessor/version`

---
 src/rest/openapi.yaml   | 15 +++++++++++++++
 src/rest/resource.cpp   | 30 ++++++++++++++++++++++++++++++
 src/rest/resource.hpp   |  2 ++
 tests/rest/test_rest.py | 21 +++++++++++++++++++++
 4 files changed, 68 insertions(+)

diff --git a/src/rest/openapi.yaml b/src/rest/openapi.yaml
index 3cc2ef8f..8b6c3e87 100644
--- a/src/rest/openapi.yaml
+++ b/src/rest/openapi.yaml
@@ -312,6 +312,21 @@ paths:
       responses:
         "200":
           description: Successfully deleted the active operational dataset.
+  /node/coprocessor/version:
+    get:
+      tags:
+        - node
+      summary: Get the coprocessor version
+      description: Retrieves the NCP or RCP coprocessor version string.
+      responses:
+        "200":
+          description: Successful operation
+          content:
+            application/json:
+              schema:
+                type: string
+                description: Coprocessor version string
+                example: "OPENTHREAD/20210309-00615-g9836b6f18; NRF52840; Mar 9 2021 13:30:04"
 components:
   schemas:
     LeaderData:
diff --git a/src/rest/resource.cpp b/src/rest/resource.cpp
index 1708faf6..076f21ac 100644
--- a/src/rest/resource.cpp
+++ b/src/rest/resource.cpp
@@ -46,6 +46,8 @@
 #define OT_REST_RESOURCE_PATH_NODE_EXTPANID "/node/ext-panid"
 #define OT_REST_RESOURCE_PATH_NODE_DATASET_ACTIVE "/node/dataset/active"
 #define OT_REST_RESOURCE_PATH_NODE_DATASET_PENDING "/node/dataset/pending"
+#define OT_REST_RESOURCE_PATH_NODE_COPROCESSOR "/node/coprocessor"
+#define OT_REST_RESOURCE_PATH_NODE_COPROCESSOR_VERSION "/node/coprocessor/version"
 #define OT_REST_RESOURCE_PATH_NETWORK "/networks"
 #define OT_REST_RESOURCE_PATH_NETWORK_CURRENT "/networks/current"
 #define OT_REST_RESOURCE_PATH_NETWORK_CURRENT_COMMISSION "/networks/commission"
@@ -139,6 +141,7 @@ Resource::Resource(RcpHost *aHost)
     mResourceMap.emplace(OT_REST_RESOURCE_PATH_NODE_RLOC, &Resource::Rloc);
     mResourceMap.emplace(OT_REST_RESOURCE_PATH_NODE_DATASET_ACTIVE, &Resource::DatasetActive);
     mResourceMap.emplace(OT_REST_RESOURCE_PATH_NODE_DATASET_PENDING, &Resource::DatasetPending);
+    mResourceMap.emplace(OT_REST_RESOURCE_PATH_NODE_COPROCESSOR_VERSION, &Resource::CoprocessorVersion);
 
     // Resource callback handler
     mResourceCallbackMap.emplace(OT_REST_RESOURCE_PATH_DIAGNOSTICS, &Resource::HandleDiagnosticCallback);
@@ -835,6 +838,33 @@ void Resource::DatasetPending(const Request &aRequest, Response &aResponse) cons
     Dataset(DatasetType::kPending, aRequest, aResponse);
 }
 
+void Resource::GetCoprocessorVersion(Response &aResponse) const
+{
+    std::string coprocessorVersion;
+    std::string errorCode;
+
+    coprocessorVersion = mHost->GetCoprocessorVersion();
+    coprocessorVersion = Json::String2JsonString(coprocessorVersion);
+
+    aResponse.SetBody(coprocessorVersion);
+    errorCode = GetHttpStatus(HttpStatusCode::kStatusOk);
+    aResponse.SetResponsCode(errorCode);
+}
+
+void Resource::CoprocessorVersion(const Request &aRequest, Response &aResponse) const
+{
+    std::string errorCode;
+
+    if (aRequest.GetMethod() == HttpMethod::kGet)
+    {
+        GetCoprocessorVersion(aResponse);
+    }
+    else
+    {
+        ErrorHandler(aResponse, HttpStatusCode::kStatusMethodNotAllowed);
+    }
+}
+
 void Resource::DeleteOutDatedDiagnostic(void)
 {
     auto eraseIt = mDiagSet.begin();
diff --git a/src/rest/resource.hpp b/src/rest/resource.hpp
index 788dcd87..7ee151fb 100644
--- a/src/rest/resource.hpp
+++ b/src/rest/resource.hpp
@@ -127,6 +127,7 @@ private:
     void DatasetPending(const Request &aRequest, Response &aResponse) const;
     void Diagnostic(const Request &aRequest, Response &aResponse) const;
     void HandleDiagnosticCallback(const Request &aRequest, Response &aResponse);
+    void CoprocessorVersion(const Request &aRequest, Response &aResponse) const;
 
     void GetNodeInfo(Response &aResponse) const;
     void DeleteNodeInfo(Response &aResponse) const;
@@ -143,6 +144,7 @@ private:
     void GetDataset(DatasetType aDatasetType, const Request &aRequest, Response &aResponse) const;
     void SetDataset(DatasetType aDatasetType, const Request &aRequest, Response &aResponse) const;
     void DeleteDataset(DatasetType aDatasetType, Response &aResponse) const;
+    void GetCoprocessorVersion(Response &aResponse) const;
 
     void DeleteOutDatedDiagnostic(void);
     void UpdateDiag(std::string aKey, std::vector<otNetworkDiagTlv> &aDiag);
diff --git a/tests/rest/test_rest.py b/tests/rest/test_rest.py
index b419c2d6..fdccf526 100644
--- a/tests/rest/test_rest.py
+++ b/tests/rest/test_rest.py
@@ -296,6 +296,14 @@ def node_ext_panid_check(data):
     return True
 
 
+def node_coprocessor_version_check(data):
+    assert data is not None
+
+    assert (type(data) == str)
+
+    return True
+
+
 def node_test(thread_num):
     url = rest_api_addr + "/node"
 
@@ -406,6 +414,18 @@ def node_ext_panid_test(thread_num):
     print(" /node/ext-panid : all {}, valid {} ".format(thread_num, valid))
 
 
+def node_coprocessor_version_test(thread_num):
+    url = rest_api_addr + "/node/coprocessor/version"
+
+    response_data = [None] * thread_num
+
+    create_multi_thread(get_data_from_url, url, thread_num, response_data)
+
+    valid = [node_coprocessor_version_check(data) for data in response_data].count(True)
+
+    print(" /node/coprocessor/version : all {}, valid {} ".format(thread_num, valid))
+
+
 def diagnostics_test(thread_num):
     url = rest_api_addr + "/diagnostics"
 
@@ -450,6 +470,7 @@ def main():
     node_leader_data_test(200)
     node_num_of_router_test(200)
     node_ext_panid_test(200)
+    node_coprocessor_version_test(200)
     diagnostics_test(20)
     error_test(10)
 
-- 
2.46.0

