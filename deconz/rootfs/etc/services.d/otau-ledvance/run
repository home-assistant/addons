#!/usr/bin/with-contenv bashio
# vim: ft=bash
# shellcheck shell=bash
# ==============================================================================
# Download available firmware update for OSRAM LEDVANCE
# ==============================================================================
readonly URL_OSRAM="https://api.update.ledvance.com/v1/zigbee/firmwares"

# Ensure otau folder exists
mkdir -p "/data/otau"

bashio::log.info "Running the OSRAM LEDVANCE OTA updater..."

# fetch data
if ! OSRAM_DATA="$(curl -fsSL --retry 3 --retry-delay 2 --max-time 30 "${URL_OSRAM}")"; then
    bashio::log.warning "Can't fetch data from OSRAM (HTTP/network error). Retrying in 5h."
    exec sleep 18000
fi

OSRAM_DATA_SIZE="$(echo "${OSRAM_DATA}" | jq --raw-output '.firmwares | length')"
DL_DONE=0
for (( i=0; i < "${OSRAM_DATA_SIZE}"; i++ )); do
    OSRAM_COMPANY=$( echo "${OSRAM_DATA}" | jq --raw-output ".firmwares[$i].identity.company  // empty" 2>/dev/null)
    OSRAM_PRODUCT=$( echo "${OSRAM_DATA}" | jq --raw-output ".firmwares[$i].identity.product  // empty" 2>/dev/null)
    OTAU_FILENAME=$( echo "${OSRAM_DATA}" | jq --raw-output ".firmwares[$i].name  // empty" 2>/dev/null)
    OTAU_URL="$URL_OSRAM/download/${OSRAM_COMPANY}/${OSRAM_PRODUCT}/latest"

    # Skip if any required field is missing
    if [ -z "${OSRAM_COMPANY}" ] || [ -z "${OSRAM_PRODUCT}" ] || [ -z "${OTAU_FILENAME}" ]; then
        continue
    fi

    # Sanitize filename to last path segment and safe chars
    OTAU_BASENAME="${OTAU_FILENAME##*/}"
    OTAU_BASENAME="${OTAU_BASENAME##*/}"  # collapse nested components
    case "${OTAU_BASENAME}" in
        ''|*'..'*|.*) bashio::log.warning "Unsafe firmware name '${OTAU_FILENAME}', skipping."; continue;;
    esac
    OTAU_BASENAME="${OTAU_BASENAME//[^A-Za-z0-9._-]/_}"
    OTAU_FILE="/data/otau/${OTAU_BASENAME}"

    if [ -e "${OTAU_FILE}" ]; then
        continue
    fi

   # Download atomically; only move into place on success
    if curl -fsSL --retry 3 --retry-delay 2 --max-time 60 -o "${OTAU_FILE}.tmp" "${OTAU_URL}"; then
        mv -f "${OTAU_FILE}.tmp" "${OTAU_FILE}"
        ((DL_DONE+=1))
    else
        bashio::log.warning "Download failed for ${OTAU_URL}; will retry on next cycle."
        rm -f "${OTAU_FILE}.tmp"
        continue
    fi

    if [ "$((DL_DONE % 10))" == "0" ]; then
        # LEDVANCE/OSRAM API RateLimits : The rate limit 10 calls per 60 seconds or quota 100 MB per month.
        DL_DONE=0
        sleep 65
    fi
done

exec sleep 259200
